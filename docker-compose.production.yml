version: '3.8'

services:
  backend:
    image: msmkd/kittygram_backend
    container_name: backend
    restart: always
    env_file: .env
    networks:
      - kittygram-network
    volumes:
      - backend_static:/backend_static     # Django STATIC_ROOT
      - media:/media_static                # Django MEDIA_ROOT
    depends_on:
      - postgres

  frontend:
    image: msmkd/kittygram_frontend
    container_name: frontend
    restart: always
    networks:
      - kittygram-network
    volumes:
      - frontend:/app/build                # Фронтенд билд (index.html и статика)

  gateway:
    image: msmkd/kittygram_gateway
    container_name: gateway
    ports:
      - '80:80'
    restart: always
    depends_on:
      - backend
      - frontend
    networks:
      - kittygram-network
    volumes:
      - backend_static:/static/collected_static   # Django статика (alias: /static/)
      - media:/media_static                       # Медиафайлы
      - frontend:/frontend                        # Фронтенд (root /)

  postgres:
    image: postgres:13
    container_name: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - kittygram-network

volumes:
  pg_data:
  backend_static:    # Только Django-статика
  media:             # Медиафайлы
  frontend:          # Только фронтенд

networks:
  kittygram-network:
    driver: bridge
